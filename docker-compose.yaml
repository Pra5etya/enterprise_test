services:
  main_app:
    build: .
    container_name: flask_enterprise
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      arangodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_started
    environment:
      - FLASK_ENV=development
      # Config untuk koneksi ke Arango
      - ARANGO_USER=root
      - ARANGO_PASS=openSesame
      - ARANGO_DB=appdb
      - ARANGO_HOST=http://arangodb:8529
      # Config untuk Postgres
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=appdb
      - POSTGRES_HOST=postgres
      # Redis & Elasticsearch host
      - REDIS_HOST=redis
      - ELASTICSEARCH_HOST=http://elasticsearch:9200

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: appdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d appdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  arangodb:
    image: arangodb:3.11
    environment:
      - ARANGO_ROOT_PASSWORD=openSesame
    ports:
      - "8529:8529"
    volumes:
      - arango_data:/var/lib/arangodb3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8529/_api/version"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  pgdata:
  arango_data:
  esdata:
